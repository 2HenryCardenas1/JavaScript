{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"labelProps\", \"mask\", \"isPassword\", \"maxLength\", \"inputStyles\", \"showCountdown\", \"showCountdownStyles\", \"labelStyles\", \"darkTheme\", \"countdownLabel\", \"currencyDivider\", \"currency\", \"maskType\", \"onChangeText\", \"customHidePasswordComponent\", \"customShowPasswordComponent\", \"isFocused\", \"onBlur\", \"onFocus\", \"onTogglePassword\", \"togglePassword\", \"leftComponent\", \"rightComponent\", \"customHidePasswordImage\", \"customLabelStyles\", \"staticLabel\", \"hint\", \"hintTextColor\", \"onSubmit\", \"containerStyles\", \"customShowPasswordImage\", \"showPasswordContainerStyles\", \"maxDecimalPlaces\", \"multiline\", \"showPasswordImageStyles\", \"value\", \"animationDuration\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ReactAnimated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated, { EasingNode, timing, interpolateColors } from 'react-native-reanimated';\nimport { styles } from \"./styles\";\nimport makeVisibleWhite from \"./assets/make_visible_white.png\";\nimport makeInvisibleWhite from \"./assets/make_invisible_white.png\";\nimport makeVisibleBlack from \"./assets/make_visible_black.png\";\nimport makeInvisibleBlack from \"./assets/make_invisible_black.png\";\nimport { getValueWithCurrencyMask, getValueWithNonCurrencyMask } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar setGlobalStyles = {\n  containerStyles: undefined,\n  customLabelStyles: undefined,\n  inputStyles: undefined,\n  labelStyles: undefined,\n  showPasswordContainerStyles: undefined,\n  showPasswordImageStyles: undefined,\n  showCountdownStyles: undefined\n};\nvar AnimatedText = Animated.createAnimatedComponent(Text);\n\nvar FloatingLabelInput = function FloatingLabelInput(_ref, ref) {\n  var _customLabelStyles, _customLabelStyles2, _customLabelStyles3;\n\n  var label = _ref.label,\n      labelProps = _ref.labelProps,\n      mask = _ref.mask,\n      isPassword = _ref.isPassword,\n      maxLength = _ref.maxLength,\n      inputStyles = _ref.inputStyles,\n      showCountdown = _ref.showCountdown,\n      showCountdownStyles = _ref.showCountdownStyles,\n      labelStyles = _ref.labelStyles,\n      darkTheme = _ref.darkTheme,\n      countdownLabel = _ref.countdownLabel,\n      currencyDivider = _ref.currencyDivider,\n      currency = _ref.currency,\n      maskType = _ref.maskType,\n      onChangeText = _ref.onChangeText,\n      customHidePasswordComponent = _ref.customHidePasswordComponent,\n      customShowPasswordComponent = _ref.customShowPasswordComponent,\n      isFocused = _ref.isFocused,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onTogglePassword = _ref.onTogglePassword,\n      togglePassword = _ref.togglePassword,\n      leftComponent = _ref.leftComponent,\n      rightComponent = _ref.rightComponent,\n      customHidePasswordImage = _ref.customHidePasswordImage,\n      _ref$customLabelStyle = _ref.customLabelStyles,\n      customLabelStyles = _ref$customLabelStyle === void 0 ? {} : _ref$customLabelStyle,\n      _ref$staticLabel = _ref.staticLabel,\n      staticLabel = _ref$staticLabel === void 0 ? false : _ref$staticLabel,\n      hint = _ref.hint,\n      hintTextColor = _ref.hintTextColor,\n      onSubmit = _ref.onSubmit,\n      containerStyles = _ref.containerStyles,\n      customShowPasswordImage = _ref.customShowPasswordImage,\n      showPasswordContainerStyles = _ref.showPasswordContainerStyles,\n      maxDecimalPlaces = _ref.maxDecimalPlaces,\n      multiline = _ref.multiline,\n      showPasswordImageStyles = _ref.showPasswordImageStyles,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value,\n      animationDuration = _ref.animationDuration,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      halfTop = _useState2[0],\n      setHalfTop = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocusedState = _useState4[0],\n      setIsFocused = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secureText = _useState6[0],\n      setSecureText = _useState6[1];\n\n  var inputRef = useRef(null);\n  customLabelStyles = _objectSpread(_objectSpread({\n    fontSizeFocused: 10,\n    fontSizeBlurred: 14,\n    colorFocused: '#49658c',\n    colorBlurred: '#49658c'\n  }, setGlobalStyles == null ? void 0 : setGlobalStyles.customLabelStyles), customLabelStyles);\n\n  var _useState7 = useState(new Animated.Value(0)),\n      _useState8 = _slicedToArray(_useState7, 1),\n      fontColorAnimated = _useState8[0];\n\n  var _useState9 = useState(new Animated.Value(isFocused ? customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10 : customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14)),\n      _useState10 = _slicedToArray(_useState9, 1),\n      fontSizeAnimated = _useState10[0];\n\n  var _useState11 = useState(new Animated.Value(staticLabel ? ((_customLabelStyles = customLabelStyles) == null ? void 0 : _customLabelStyles.leftFocused) !== undefined ? customLabelStyles.leftFocused : 15 : customLabelStyles != undefined && customLabelStyles.leftBlurred !== undefined ? customLabelStyles.leftBlurred : 0)),\n      _useState12 = _slicedToArray(_useState11, 1),\n      leftAnimated = _useState12[0];\n\n  var _useState13 = useState(new Animated.Value(staticLabel ? ((_customLabelStyles2 = customLabelStyles) == null ? void 0 : _customLabelStyles2.topFocused) !== undefined ? customLabelStyles.topFocused : 0 : customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 0)),\n      _useState14 = _slicedToArray(_useState13, 1),\n      topAnimated = _useState14[0];\n\n  useEffect(function () {\n    if (isFocused === undefined) {\n      if (value !== '' || isFocusedState) {\n        setIsFocused(true);\n      } else if (value === '' || value === null) {\n        setIsFocused(false);\n      }\n    }\n  }, [value]);\n  useEffect(function () {\n    if (isFocused !== undefined) {\n      if (value !== '' || isFocused) {\n        setIsFocused(true);\n      } else {\n        setIsFocused(false);\n      }\n    }\n  }, [isFocused, value]);\n  useEffect(function () {\n    if (togglePassword !== undefined) {\n      _toggleVisibility(togglePassword);\n    }\n  }, [togglePassword]);\n  useEffect(function () {\n    if (isFocusedState || value !== '') {\n      if (halfTop !== 0) {\n        animateFocus();\n      }\n    } else {\n      animateBlur();\n    }\n  }, [isFocusedState, halfTop]);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  });\n  useEffect(function () {\n    if (!staticLabel && customLabelStyles.topFocused === undefined && isFocusedState) {\n      ReactAnimated.parallel([timing(leftAnimated, {\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear,\n        toValue: customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 0\n      }), timing(fontSizeAnimated, {\n        toValue: customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(topAnimated, {\n        toValue: customLabelStyles.topFocused ? customLabelStyles.topFocused : -halfTop + (isFocusedState ? customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10 : customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14),\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      })]).start();\n    } else if (staticLabel && isFocusedState) {\n      Animated.timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }).start();\n    }\n  }, [halfTop]);\n\n  function animateFocus() {\n    if (!staticLabel) {\n      ReactAnimated.parallel([timing(leftAnimated, {\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear,\n        toValue: customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 0\n      }), timing(fontSizeAnimated, {\n        toValue: customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(topAnimated, {\n        toValue: customLabelStyles.topFocused ? customLabelStyles.topFocused : -halfTop + (isFocusedState ? customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10 : customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14),\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      })]).start();\n    } else {\n      Animated.timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }).start();\n    }\n  }\n\n  function animateBlur() {\n    if (!staticLabel) {\n      ReactAnimated.parallel([timing(leftAnimated, {\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear,\n        toValue: customLabelStyles.leftBlurred ? customLabelStyles.leftBlurred : 0\n      }), timing(fontSizeAnimated, {\n        toValue: customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(topAnimated, {\n        toValue: customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 0,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(fontColorAnimated, {\n        toValue: 0,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      })]).start();\n    } else {\n      Animated.timing(fontColorAnimated, {\n        toValue: 0,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }).start();\n    }\n  }\n\n  function handleFocus() {\n    setIsFocused(true);\n  }\n\n  function handleBlur() {\n    if (value === '') {\n      setIsFocused(false);\n    }\n  }\n\n  function setFocus() {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.focus();\n  }\n\n  function setBlur() {\n    var _inputRef$current2;\n\n    (_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.blur();\n  }\n\n  function _toggleVisibility(toggle) {\n    if (toggle === undefined) {\n      if (onTogglePassword) {\n        onTogglePassword(!secureText);\n      }\n\n      setSecureText(!secureText);\n      secureText ? setFocus() : setBlur();\n    } else {\n      if (!(secureText && !toggle || !secureText && toggle)) {\n        if (onTogglePassword) {\n          onTogglePassword(!toggle);\n        }\n\n        setSecureText(!toggle);\n        toggle ? setFocus() : setBlur();\n      }\n    }\n  }\n\n  function onSubmitEditing() {\n    if (onSubmit !== undefined) {\n      onSubmit();\n    }\n  }\n\n  var imgSource = darkTheme ? secureText ? customShowPasswordImage || makeVisibleBlack : customHidePasswordImage || makeInvisibleBlack : secureText ? customShowPasswordImage || makeVisibleWhite : customHidePasswordImage || makeInvisibleWhite;\n\n  var style = _objectSpread(_objectSpread(_objectSpread({}, setGlobalStyles == null ? void 0 : setGlobalStyles.labelStyles), labelStyles), {}, {\n    left: (labelStyles == null ? void 0 : labelStyles.left) !== undefined ? labelStyles == null ? void 0 : labelStyles.left : 5,\n    fontSize: staticLabel ? ((_customLabelStyles3 = customLabelStyles) == null ? void 0 : _customLabelStyles3.fontSizeFocused) !== undefined ? customLabelStyles.fontSizeFocused : 10 : !isFocusedState ? customLabelStyles.fontSizeBlurred : customLabelStyles.fontSizeFocused,\n    color: interpolateColors(fontColorAnimated, {\n      inputRange: [0, 1],\n      outputColorRange: [customLabelStyles.colorBlurred, customLabelStyles.colorFocused]\n    }),\n    alignSelf: 'center',\n    position: 'absolute',\n    flex: 1,\n    zIndex: 999\n  });\n\n  var input = inputStyles !== undefined ? inputStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.inputStyles) !== undefined ? setGlobalStyles.inputStyles : styles.input;\n  input = _objectSpread(_objectSpread({}, input), {}, {\n    flex: 1,\n    color: input.color !== undefined ? input.color : customLabelStyles.colorFocused,\n    zIndex: (style == null ? void 0 : style.zIndex) !== undefined ? style.zIndex - 2 : 0\n  });\n  containerStyles = containerStyles !== undefined ? containerStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.containerStyles) !== undefined ? setGlobalStyles == null ? void 0 : setGlobalStyles.containerStyles : styles.container;\n  containerStyles = _objectSpread(_objectSpread({}, containerStyles), {}, {\n    alignItems: 'center',\n    flexDirection: 'row',\n    flex: 1,\n    zIndex: (style == null ? void 0 : style.zIndex) !== undefined ? style.zIndex - 6 : 0\n  });\n  var toggleButton = showPasswordContainerStyles !== undefined ? showPasswordContainerStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.showPasswordContainerStyles) !== undefined ? setGlobalStyles.showPasswordContainerStyles : styles.toggleButton;\n  toggleButton = _objectSpread(_objectSpread({}, toggleButton), {}, {\n    alignSelf: 'center'\n  });\n  var img = showPasswordImageStyles !== undefined ? showPasswordImageStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.showPasswordImageStyles) !== undefined ? setGlobalStyles.showPasswordImageStyles : styles.img;\n  img = _objectSpread({\n    height: 25,\n    width: 25\n  }, img);\n\n  var countdown = _objectSpread(_objectSpread(_objectSpread({}, styles.countdown), setGlobalStyles == null ? void 0 : setGlobalStyles.showCountdownStyles), showCountdownStyles);\n\n  function onChangeTextCallback(val) {\n    if (onChangeText === undefined) return undefined;\n    if (maskType === undefined && mask === undefined) return onChangeText(val);\n    var newValue;\n\n    if (maskType !== 'currency' && mask !== undefined) {\n      newValue = getValueWithNonCurrencyMask({\n        value: val,\n        mask: mask\n      });\n    }\n\n    if (maskType === 'currency') {\n      if (currency !== undefined && !/^[0-9]+$/g.test(val.replace(/[.,]/g, '').replace(currency, '')) && val.replace(/[.,]/g, '').replace(currency, '') !== '') {\n        return undefined;\n      } else if (currency === undefined && !/^[0-9]+$/g.test(val.replace(/[.,]/g, '')) && val.replace(/[.,]/g, '') !== '') {\n        return undefined;\n      }\n\n      newValue = getValueWithCurrencyMask({\n        value: currency !== undefined ? value.replace(currency, '') : value,\n        newValue: currency !== undefined ? val.replace(currency, '') : val,\n        currencyDivider: currencyDivider,\n        maxDecimalPlaces: maxDecimalPlaces\n      });\n    }\n\n    if (newValue !== undefined) {\n      return onChangeText((currency !== undefined ? currency : '') + newValue);\n    }\n  }\n\n  function onLayout(event) {\n    var height = event.nativeEvent.layout.height;\n    setHalfTop(height / 2);\n  }\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: setFocus,\n    onLayout: onLayout,\n    children: _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [staticLabel && _jsx(AnimatedText, _objectSpread(_objectSpread({}, labelProps), {}, {\n        onPress: setFocus,\n        style: [style, {\n          left: labelStyles != null && labelStyles.left ? labelStyles == null ? void 0 : labelStyles.left : customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 20,\n          top: -(style != null && style.fontSize ? style == null ? void 0 : style.fontSize : 10) / 2\n        }],\n        children: label\n      })), _jsxs(View, {\n        style: containerStyles,\n        children: [leftComponent && leftComponent, _jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          children: [!staticLabel && _jsx(AnimatedText, _objectSpread(_objectSpread({}, labelProps), {}, {\n            onPress: setFocus,\n            style: [style, {\n              fontSize: fontSizeAnimated,\n              transform: [{\n                translateX: leftAnimated\n              }, {\n                translateY: topAnimated\n              }]\n            }],\n            children: label\n          })), _jsx(TextInput, _objectSpread(_objectSpread({\n            value: value,\n            onSubmitEditing: onSubmitEditing,\n            secureTextEntry: isPassword !== undefined ? isPassword && secureText : false,\n            onFocus: onFocus !== undefined ? onFocus : handleFocus,\n            onBlur: onBlur !== undefined ? onBlur : handleBlur,\n            ref: inputRef\n          }, rest), {}, {\n            maxLength: mask !== undefined ? mask.length : maxLength !== undefined ? maxLength : undefined,\n            placeholderTextColor: hintTextColor,\n            placeholder: (staticLabel || isFocusedState) && hint ? hint : '',\n            multiline: multiline,\n            onChangeText: onChangeTextCallback,\n            style: input\n          })), rightComponent && rightComponent, isPassword && _jsx(TouchableOpacity, {\n            style: toggleButton,\n            onPress: function onPress() {\n              return _toggleVisibility();\n            },\n            children: secureText && customShowPasswordComponent !== undefined ? customShowPasswordComponent : !secureText && customHidePasswordComponent !== undefined ? customHidePasswordComponent : _jsx(Image, {\n              source: imgSource,\n              resizeMode: \"contain\",\n              style: img\n            })\n          })]\n        }), showCountdown && maxLength && _jsxs(Text, {\n          style: countdown,\n          children: [maxLength - (value ? value.length : 0), \" \", countdownLabel]\n        })]\n      })]\n    })\n  });\n};\n\nexport { setGlobalStyles };\nexport default forwardRef(FloatingLabelInput);","map":{"version":3,"names":["React","useState","useRef","useEffect","forwardRef","useImperativeHandle","Animated","EasingNode","timing","interpolateColors","styles","makeVisibleWhite","makeInvisibleWhite","makeVisibleBlack","makeInvisibleBlack","getValueWithCurrencyMask","getValueWithNonCurrencyMask","setGlobalStyles","containerStyles","undefined","customLabelStyles","inputStyles","labelStyles","showPasswordContainerStyles","showPasswordImageStyles","showCountdownStyles","AnimatedText","createAnimatedComponent","Text","FloatingLabelInput","ref","label","labelProps","mask","isPassword","maxLength","showCountdown","darkTheme","countdownLabel","currencyDivider","currency","maskType","onChangeText","customHidePasswordComponent","customShowPasswordComponent","isFocused","onBlur","onFocus","onTogglePassword","togglePassword","leftComponent","rightComponent","customHidePasswordImage","staticLabel","hint","hintTextColor","onSubmit","customShowPasswordImage","maxDecimalPlaces","multiline","value","animationDuration","rest","halfTop","setHalfTop","isFocusedState","setIsFocused","secureText","setSecureText","inputRef","fontSizeFocused","fontSizeBlurred","colorFocused","colorBlurred","Value","fontColorAnimated","fontSizeAnimated","leftFocused","leftBlurred","leftAnimated","topFocused","topBlurred","topAnimated","_toggleVisibility","animateFocus","animateBlur","focus","current","blur","ReactAnimated","parallel","duration","easing","linear","toValue","start","handleFocus","handleBlur","setFocus","setBlur","toggle","onSubmitEditing","imgSource","style","left","fontSize","color","inputRange","outputColorRange","alignSelf","position","flex","zIndex","input","container","alignItems","flexDirection","toggleButton","img","height","width","countdown","onChangeTextCallback","val","newValue","test","replace","onLayout","event","nativeEvent","layout","top","transform","translateX","translateY","length"],"sources":["C:/repositorios/JavaScript/ReactNative/ReactNative/node_modules/react-native-floating-label-input/src/index.tsx"],"sourcesContent":["import React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from 'react';\r\nimport {\r\n  View,\r\n  Animated as ReactAnimated,\r\n  TextInput,\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextProps,\r\n  TextInputProps,\r\n  TextStyle,\r\n  ViewStyle,\r\n  ImageStyle,\r\n  TouchableWithoutFeedback,\r\n  LayoutChangeEvent,\r\n} from 'react-native';\r\nimport Animated, {\r\n  EasingNode,\r\n  timing,\r\n  interpolateColors,\r\n} from 'react-native-reanimated';\r\nimport { styles } from './styles';\r\n\r\n// @ts-ignore\r\nimport makeVisibleWhite from './assets/make_visible_white.png';\r\n// @ts-ignore\r\nimport makeInvisibleWhite from './assets/make_invisible_white.png';\r\n// @ts-ignore\r\nimport makeVisibleBlack from './assets/make_visible_black.png';\r\n// @ts-ignore\r\nimport makeInvisibleBlack from './assets/make_invisible_black.png';\r\nimport { getValueWithCurrencyMask, getValueWithNonCurrencyMask } from './utils';\r\n\r\nexport interface Props extends Omit<TextInputProps, 'secureTextEntry'> {\r\n  /** Style to the container of whole component */\r\n  containerStyles?: ViewStyle;\r\n  /** Changes the color for hide/show password image */\r\n  darkTheme?: true | false;\r\n  /** Set this to true if you want the label to be always at a set position. Commonly used with hint for displaying both label and hint for your input. Default false. */\r\n  staticLabel?: boolean;\r\n  /** Hint displays only when staticLabel prop is set to true. This prop is used to show a preview of the input to the user */\r\n  hint?: string;\r\n  /** Set the color to the hint */\r\n  hintTextColor?: string;\r\n  /** Value for the label, same as placeholder */\r\n  label: string;\r\n  /** Style to the label */\r\n  labelStyles?: TextStyle;\r\n  /** Set this to true if is password to have a show/hide input and secureTextEntry automatically */\r\n  isPassword?: true | false;\r\n  /** Callback for action submit on the keyboard */\r\n  onSubmit?: () => void;\r\n  /** Style to the show/hide password container */\r\n  showPasswordContainerStyles?: ViewStyle;\r\n  /** Style to the show/hide password image */\r\n  showPasswordImageStyles?: ImageStyle;\r\n  /** Style to the input */\r\n  inputStyles?: TextStyle;\r\n  /** Path to your custom image for show input */\r\n  customShowPasswordImage?: string;\r\n  /** Path to your custom image for hide input */\r\n  customHidePasswordImage?: string;\r\n  /** Custom Style for position, size and color for label, when it's focused or blurred */\r\n  customLabelStyles?: CustomLabelProps;\r\n  /** Required if onFocus or onBlur is overrided */\r\n  isFocused?: boolean;\r\n  /** Set a mask to your input */\r\n  mask?: string;\r\n  /** Set mask type */\r\n  maskType?: 'currency' | 'phone' | 'date' | 'card';\r\n  /** Set currency thousand dividers */\r\n  currencyDivider?: ',' | '.';\r\n  /** Maxinum number of decimal places allowed for currency mask. */\r\n  maxDecimalPlaces?: number;\r\n  /** Set currency on input value */\r\n  currency?: string;\r\n  /** Changes the input from single line input to multiline input */\r\n  multiline?: true | false;\r\n  /** Maxinum number of characters allowed. Overriden by mask if present */\r\n  maxLength?: number;\r\n  /** Shows the remaining number of characters allowed to be typed if maxLength or mask are present */\r\n  showCountdown?: true | false;\r\n  /** Style to the countdown text */\r\n  showCountdownStyles?: TextStyle;\r\n  /** Label for the remaining number of characters allowed shown after the number */\r\n  countdownLabel?: string;\r\n  /** Set your custom show password component */\r\n  customShowPasswordComponent?: JSX.Element;\r\n  /** Set your custom hide password component */\r\n  customHidePasswordComponent?: JSX.Element;\r\n  /** Callback for show/hide password */\r\n  onTogglePassword?: (show: boolean) => void;\r\n  /** Prop for force toggling show/hide password. If set to true, shows the password, and when set to false hides it. */\r\n  togglePassword?: boolean;\r\n  /** Add left component to your input. Usually used for displaying icon */\r\n  leftComponent?: JSX.Element;\r\n  /** Add right component to your input. Be aware if using the input as password this component is positioned before the show/hide component */\r\n  rightComponent?: JSX.Element;\r\n  /** Set custom animation duration. Default 300 ms */\r\n  animationDuration?: number;\r\n  /** Label Props */\r\n  labelProps?: TextProps;\r\n}\r\n\r\nexport interface SetGlobalStyles {\r\n  /** Set global styles to all floating-label-inputs container */\r\n  containerStyles?: ViewStyle;\r\n  /** Set global custom styles to all floating-label-inputs labels */\r\n  customLabelStyles?: CustomLabelProps;\r\n  /** Set global styles to all floating-label-inputs input */\r\n  inputStyles?: TextStyle;\r\n  /** Set global styles to all floating-label-inputs label */\r\n  labelStyles?: TextStyle;\r\n  /** Set global styles to all floating-label-inputs show password container */\r\n  showPasswordContainerStyles?: ViewStyle;\r\n  /** Set global styles to all floating-label-inputs show password image */\r\n  showPasswordImageStyles?: ImageStyle;\r\n  /** Set global style to the countdown text */\r\n  showCountdownStyles?: TextStyle;\r\n}\r\n\r\nexport interface CustomLabelProps {\r\n  /** Absolute distance from left-most side of the input when focused */\r\n  leftFocused?: number;\r\n  /** Absolute distance from left-most side of the input when blurred */\r\n  leftBlurred?: number;\r\n  /** Absolute distance from center of the input when focused */\r\n  topFocused?: number;\r\n  /** Absolute distance from center of the input when blurred */\r\n  topBlurred?: number;\r\n  /** Font size of label the when focused */\r\n  fontSizeFocused?: number;\r\n  /** Font size of label the when blurred */\r\n  fontSizeBlurred?: number;\r\n  /** Font color of label the when blurred */\r\n  colorFocused?: string;\r\n  /** Font color of label the when blurred */\r\n  colorBlurred?: string;\r\n}\r\n\r\n/** Set global styles for all your floating-label-inputs */\r\nconst setGlobalStyles: SetGlobalStyles = {\r\n  /**Set global styles to all floating-label-inputs container */\r\n  containerStyles: undefined as ViewStyle | undefined,\r\n  /**Set global custom styles to all floating-label-inputs labels */\r\n  customLabelStyles: undefined as CustomLabelProps | undefined,\r\n  /**Set global styles to all floating-label-inputs input */\r\n  inputStyles: undefined as TextStyle | undefined,\r\n  /**Set global styles to all floating-label-inputs label */\r\n  labelStyles: undefined as TextStyle | undefined,\r\n  /**Set global styles to all floating-label-inputs show password container */\r\n  showPasswordContainerStyles: undefined as ViewStyle | undefined,\r\n  /**Set global styles to all floating-label-inputs show password image */\r\n  showPasswordImageStyles: undefined as ImageStyle | undefined,\r\n  /**Set global style to the countdown text */\r\n  showCountdownStyles: undefined as TextStyle | undefined,\r\n};\r\n\r\ninterface InputRef {\r\n  focus(): void;\r\n  blur(): void;\r\n}\r\n\r\nconst AnimatedText = Animated.createAnimatedComponent(Text);\r\n\r\nconst FloatingLabelInput: React.ForwardRefRenderFunction<InputRef, Props> = (\r\n  {\r\n    label,\r\n    labelProps,\r\n    mask,\r\n    isPassword,\r\n    maxLength,\r\n    inputStyles,\r\n    showCountdown,\r\n    showCountdownStyles,\r\n    labelStyles,\r\n    darkTheme,\r\n    countdownLabel,\r\n    currencyDivider,\r\n    currency,\r\n    maskType,\r\n    onChangeText,\r\n    customHidePasswordComponent,\r\n    customShowPasswordComponent,\r\n    isFocused,\r\n    onBlur,\r\n    onFocus,\r\n    onTogglePassword,\r\n    togglePassword,\r\n    leftComponent,\r\n    rightComponent,\r\n    customHidePasswordImage,\r\n    customLabelStyles = {},\r\n    staticLabel = false,\r\n    hint,\r\n    hintTextColor,\r\n    onSubmit,\r\n    containerStyles,\r\n    customShowPasswordImage,\r\n    showPasswordContainerStyles,\r\n    maxDecimalPlaces,\r\n    multiline,\r\n    showPasswordImageStyles,\r\n    value = '',\r\n    animationDuration,\r\n    ...rest\r\n  }: Props,\r\n  ref: any,\r\n) => {\r\n  const [halfTop, setHalfTop] = useState(0);\r\n  const [isFocusedState, setIsFocused] = useState(false);\r\n  const [secureText, setSecureText] = useState(true);\r\n  const inputRef = useRef<any>(null);\r\n\r\n  customLabelStyles = {\r\n    fontSizeFocused: 10,\r\n    fontSizeBlurred: 14,\r\n    colorFocused: '#49658c',\r\n    colorBlurred: '#49658c',\r\n    ...setGlobalStyles?.customLabelStyles,\r\n    ...customLabelStyles,\r\n  };\r\n\r\n  const [fontColorAnimated] = useState(new Animated.Value(0));\r\n\r\n  const [fontSizeAnimated] = useState(\r\n    new Animated.Value(\r\n      isFocused\r\n        ? customLabelStyles.fontSizeFocused\r\n          ? customLabelStyles.fontSizeFocused\r\n          : 10\r\n        : customLabelStyles.fontSizeBlurred\r\n        ? customLabelStyles.fontSizeBlurred\r\n        : 14,\r\n    ),\r\n  );\r\n\r\n  const [leftAnimated] = useState(\r\n    new Animated.Value(\r\n      staticLabel\r\n        ? customLabelStyles?.leftFocused !== undefined\r\n          ? customLabelStyles.leftFocused\r\n          : 15\r\n        : customLabelStyles != undefined &&\r\n          customLabelStyles.leftBlurred !== undefined\r\n        ? customLabelStyles.leftBlurred\r\n        : 0,\r\n    ),\r\n  );\r\n\r\n  const [topAnimated] = useState(\r\n    new Animated.Value(\r\n      staticLabel\r\n        ? customLabelStyles?.topFocused !== undefined\r\n          ? customLabelStyles.topFocused\r\n          : 0\r\n        : customLabelStyles.topBlurred\r\n        ? customLabelStyles.topBlurred\r\n        : 0,\r\n    ),\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isFocused === undefined) {\r\n      if (value !== '' || isFocusedState) {\r\n        setIsFocused(true);\r\n      } else if (value === '' || value === null) {\r\n        setIsFocused(false);\r\n      }\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (isFocused !== undefined) {\r\n      if (value !== '' || isFocused) {\r\n        setIsFocused(true);\r\n      } else {\r\n        setIsFocused(false);\r\n      }\r\n    }\r\n  }, [isFocused, value]);\r\n\r\n  useEffect(() => {\r\n    if (togglePassword !== undefined) {\r\n      _toggleVisibility(togglePassword);\r\n    }\r\n  }, [togglePassword]);\r\n\r\n  useEffect(() => {\r\n    if (isFocusedState || value !== '') {\r\n      if (halfTop !== 0) {\r\n        animateFocus();\r\n      }\r\n    } else {\r\n      animateBlur();\r\n    }\r\n  }, [isFocusedState, halfTop]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus() {\r\n      inputRef.current.focus();\r\n    },\r\n    blur() {\r\n      inputRef.current.blur();\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !staticLabel &&\r\n      customLabelStyles.topFocused === undefined &&\r\n      isFocusedState\r\n    ) {\r\n      ReactAnimated.parallel([\r\n        timing(leftAnimated, {\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n          toValue: customLabelStyles.leftFocused\r\n            ? customLabelStyles.leftFocused\r\n            : 0,\r\n        }),\r\n        timing(fontSizeAnimated, {\r\n          toValue: customLabelStyles.fontSizeFocused\r\n            ? customLabelStyles.fontSizeFocused\r\n            : 10,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        timing(topAnimated, {\r\n          toValue: customLabelStyles.topFocused\r\n            ? customLabelStyles.topFocused\r\n            : -halfTop +\r\n              (isFocusedState\r\n                ? customLabelStyles.fontSizeFocused\r\n                  ? customLabelStyles.fontSizeFocused\r\n                  : 10\r\n                : customLabelStyles.fontSizeBlurred\r\n                ? customLabelStyles.fontSizeBlurred\r\n                : 14),\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        // @ts-ignore\r\n        timing(fontColorAnimated, {\r\n          toValue: 1,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n      ]).start();\r\n    } else if (staticLabel && isFocusedState) {\r\n      Animated.timing(fontColorAnimated, {\r\n        toValue: 1,\r\n        duration: animationDuration ? animationDuration : 300,\r\n        easing: EasingNode.linear,\r\n      }).start();\r\n    }\r\n  }, [halfTop]);\r\n\r\n  function animateFocus() {\r\n    if (!staticLabel) {\r\n      ReactAnimated.parallel([\r\n        timing(leftAnimated, {\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n          toValue: customLabelStyles.leftFocused\r\n            ? customLabelStyles.leftFocused\r\n            : 0,\r\n        }),\r\n        timing(fontSizeAnimated, {\r\n          toValue: customLabelStyles.fontSizeFocused\r\n            ? customLabelStyles.fontSizeFocused\r\n            : 10,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        timing(topAnimated, {\r\n          toValue: customLabelStyles.topFocused\r\n            ? customLabelStyles.topFocused\r\n            : -halfTop +\r\n              (isFocusedState\r\n                ? customLabelStyles.fontSizeFocused\r\n                  ? customLabelStyles.fontSizeFocused\r\n                  : 10\r\n                : customLabelStyles.fontSizeBlurred\r\n                ? customLabelStyles.fontSizeBlurred\r\n                : 14),\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        // @ts-ignore\r\n        timing(fontColorAnimated, {\r\n          toValue: 1,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n      ]).start();\r\n    } else {\r\n      Animated.timing(fontColorAnimated, {\r\n        toValue: 1,\r\n        duration: animationDuration ? animationDuration : 300,\r\n        easing: EasingNode.linear,\r\n      }).start();\r\n    }\r\n  }\r\n\r\n  function animateBlur() {\r\n    if (!staticLabel) {\r\n      ReactAnimated.parallel([\r\n        timing(leftAnimated, {\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n          toValue: customLabelStyles.leftBlurred\r\n            ? customLabelStyles.leftBlurred\r\n            : 0,\r\n        }),\r\n        timing(fontSizeAnimated, {\r\n          toValue: customLabelStyles.fontSizeBlurred\r\n            ? customLabelStyles.fontSizeBlurred\r\n            : 14,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        timing(topAnimated, {\r\n          toValue: customLabelStyles.topBlurred\r\n            ? customLabelStyles.topBlurred\r\n            : 0,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        // @ts-ignore\r\n        timing(fontColorAnimated, {\r\n          toValue: 0,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n      ]).start();\r\n    } else {\r\n      Animated.timing(fontColorAnimated, {\r\n        toValue: 0,\r\n        duration: animationDuration ? animationDuration : 300,\r\n        easing: EasingNode.linear,\r\n      }).start();\r\n    }\r\n  }\r\n\r\n  function handleFocus() {\r\n    setIsFocused(true);\r\n  }\r\n\r\n  function handleBlur() {\r\n    if (value === '') {\r\n      setIsFocused(false);\r\n    }\r\n  }\r\n\r\n  function setFocus() {\r\n    inputRef.current?.focus();\r\n  }\r\n\r\n  function setBlur() {\r\n    inputRef.current?.blur();\r\n  }\r\n\r\n  function _toggleVisibility(toggle?: boolean) {\r\n    if (toggle === undefined) {\r\n      if (onTogglePassword) {\r\n        onTogglePassword(!secureText);\r\n      }\r\n      setSecureText(!secureText);\r\n      secureText ? setFocus() : setBlur();\r\n    } else {\r\n      if (!((secureText && !toggle) || (!secureText && toggle))) {\r\n        if (onTogglePassword) {\r\n          onTogglePassword(!toggle);\r\n        }\r\n        setSecureText(!toggle);\r\n        toggle ? setFocus() : setBlur();\r\n      }\r\n    }\r\n  }\r\n\r\n  function onSubmitEditing() {\r\n    if (onSubmit !== undefined) {\r\n      onSubmit();\r\n    }\r\n  }\r\n\r\n  const imgSource = darkTheme\r\n    ? secureText\r\n      ? customShowPasswordImage || makeVisibleBlack\r\n      : customHidePasswordImage || makeInvisibleBlack\r\n    : secureText\r\n    ? customShowPasswordImage || makeVisibleWhite\r\n    : customHidePasswordImage || makeInvisibleWhite;\r\n\r\n  const style: TextStyle = {\r\n    ...setGlobalStyles?.labelStyles,\r\n    ...labelStyles,\r\n    left: labelStyles?.left !== undefined ? labelStyles?.left : 5,\r\n    fontSize: staticLabel\r\n      ? customLabelStyles?.fontSizeFocused !== undefined\r\n        ? customLabelStyles.fontSizeFocused\r\n        : 10\r\n      : !isFocusedState\r\n      ? customLabelStyles.fontSizeBlurred\r\n      : customLabelStyles.fontSizeFocused,\r\n    // @ts-ignore\r\n    color: interpolateColors(fontColorAnimated, {\r\n      inputRange: [0, 1],\r\n      outputColorRange: [\r\n        // @ts-ignore\r\n        customLabelStyles.colorBlurred,\r\n        // @ts-ignore\r\n        customLabelStyles.colorFocused,\r\n      ],\r\n    }),\r\n    alignSelf: 'center',\r\n    position: 'absolute',\r\n    flex: 1,\r\n    zIndex: 999,\r\n  };\r\n\r\n  let input: TextStyle =\r\n    inputStyles !== undefined\r\n      ? inputStyles\r\n      : setGlobalStyles?.inputStyles !== undefined\r\n      ? setGlobalStyles.inputStyles\r\n      : styles.input;\r\n\r\n  input = {\r\n    ...input,\r\n    flex: 1,\r\n    color:\r\n      input.color !== undefined ? input.color : customLabelStyles.colorFocused,\r\n    zIndex: style?.zIndex !== undefined ? style.zIndex - 2 : 0,\r\n  };\r\n\r\n  containerStyles =\r\n    containerStyles !== undefined\r\n      ? containerStyles\r\n      : setGlobalStyles?.containerStyles !== undefined\r\n      ? setGlobalStyles?.containerStyles\r\n      : styles.container;\r\n\r\n  containerStyles = {\r\n    ...containerStyles,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n    zIndex: style?.zIndex !== undefined ? style.zIndex - 6 : 0,\r\n  };\r\n\r\n  let toggleButton =\r\n    showPasswordContainerStyles !== undefined\r\n      ? showPasswordContainerStyles\r\n      : setGlobalStyles?.showPasswordContainerStyles !== undefined\r\n      ? setGlobalStyles.showPasswordContainerStyles\r\n      : styles.toggleButton;\r\n\r\n  toggleButton = {\r\n    ...toggleButton,\r\n    alignSelf: 'center',\r\n  };\r\n\r\n  let img =\r\n    showPasswordImageStyles !== undefined\r\n      ? showPasswordImageStyles\r\n      : setGlobalStyles?.showPasswordImageStyles !== undefined\r\n      ? setGlobalStyles.showPasswordImageStyles\r\n      : styles.img;\r\n\r\n  img = {\r\n    height: 25,\r\n    width: 25,\r\n    ...img,\r\n  };\r\n\r\n  const countdown = {\r\n    ...styles.countdown,\r\n    ...setGlobalStyles?.showCountdownStyles,\r\n    ...showCountdownStyles,\r\n  };\r\n\r\n  function onChangeTextCallback(val: string): void | undefined {\r\n    if (onChangeText === undefined) return undefined;\r\n\r\n    if (maskType === undefined && mask === undefined) return onChangeText(val);\r\n\r\n    let newValue: string | undefined;\r\n\r\n    if (maskType !== 'currency' && mask !== undefined) {\r\n      newValue = getValueWithNonCurrencyMask({ value: val, mask });\r\n    }\r\n\r\n    if (maskType === 'currency') {\r\n      if (\r\n        currency !== undefined &&\r\n        !/^[0-9]+$/g.test(val.replace(/[.,]/g, '').replace(currency, '')) &&\r\n        val.replace(/[.,]/g, '').replace(currency, '') !== ''\r\n      ) {\r\n        return undefined;\r\n      } else if (\r\n        currency === undefined &&\r\n        !/^[0-9]+$/g.test(val.replace(/[.,]/g, '')) &&\r\n        val.replace(/[.,]/g, '') !== ''\r\n      ) {\r\n        return undefined;\r\n      }\r\n\r\n      newValue = getValueWithCurrencyMask({\r\n        value: currency !== undefined ? value.replace(currency, '') : value,\r\n        newValue: currency !== undefined ? val.replace(currency, '') : val,\r\n        currencyDivider,\r\n        maxDecimalPlaces,\r\n      });\r\n    }\r\n\r\n    if (newValue !== undefined) {\r\n      return onChangeText((currency !== undefined ? currency : '') + newValue);\r\n    }\r\n  }\r\n\r\n  function onLayout(event: LayoutChangeEvent) {\r\n    const { height } = event.nativeEvent.layout;\r\n    setHalfTop(height / 2);\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={setFocus} onLayout={onLayout}>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {staticLabel && (\r\n          <AnimatedText\r\n            {...labelProps}\r\n            onPress={setFocus}\r\n            style={[\r\n              style,\r\n              {\r\n                left: labelStyles?.left\r\n                  ? labelStyles?.left\r\n                  : customLabelStyles.leftFocused\r\n                  ? customLabelStyles.leftFocused\r\n                  : 20,\r\n                top: -(style?.fontSize ? style?.fontSize : 10) / 2,\r\n              },\r\n            ]}\r\n          >\r\n            {label}\r\n          </AnimatedText>\r\n        )}\r\n        <View style={containerStyles}>\r\n          {leftComponent && leftComponent}\r\n          <View style={{ flex: 1, flexDirection: 'row' }}>\r\n            {!staticLabel && (\r\n              <AnimatedText\r\n                {...labelProps}\r\n                onPress={setFocus}\r\n                style={[\r\n                  style,\r\n                  // @ts-ignore\r\n                  {\r\n                    fontSize: fontSizeAnimated,\r\n                    transform: [\r\n                      { translateX: leftAnimated },\r\n                      { translateY: topAnimated },\r\n                    ],\r\n                  },\r\n                ]}\r\n              >\r\n                {label}\r\n              </AnimatedText>\r\n            )}\r\n            <TextInput\r\n              value={value}\r\n              onSubmitEditing={onSubmitEditing}\r\n              secureTextEntry={\r\n                isPassword !== undefined ? isPassword && secureText : false\r\n              }\r\n              onFocus={onFocus !== undefined ? onFocus : handleFocus}\r\n              onBlur={onBlur !== undefined ? onBlur : handleBlur}\r\n              ref={inputRef}\r\n              {...rest}\r\n              maxLength={\r\n                mask !== undefined\r\n                  ? mask.length\r\n                  : maxLength !== undefined\r\n                  ? maxLength\r\n                  : undefined\r\n              }\r\n              placeholderTextColor={hintTextColor}\r\n              placeholder={(staticLabel || isFocusedState) && hint ? hint : ''}\r\n              multiline={multiline}\r\n              onChangeText={onChangeTextCallback}\r\n              style={input}\r\n            />\r\n            {rightComponent && rightComponent}\r\n            {isPassword && (\r\n              <TouchableOpacity\r\n                style={toggleButton}\r\n                onPress={() => _toggleVisibility()}\r\n              >\r\n                {secureText && customShowPasswordComponent !== undefined ? (\r\n                  customShowPasswordComponent\r\n                ) : !secureText && customHidePasswordComponent !== undefined ? (\r\n                  customHidePasswordComponent\r\n                ) : (\r\n                  <Image source={imgSource} resizeMode=\"contain\" style={img} />\r\n                )}\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n          {showCountdown && maxLength && (\r\n            <Text style={countdown}>\r\n              {maxLength - (value ? value.length : 0)} {countdownLabel}\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\nexport { setGlobalStyles };\r\nexport default forwardRef(FloatingLabelInput);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}