{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyledText from \"./StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar parseThousands = function parseThousands(value) {\n  return value >= 1000 ? Math.round(value / 100) / 10 + \"k\" : String(value);\n};\n\nvar RepositoryStats = function RepositoryStats(props) {\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Stars\"\n      }), _jsx(StyledText, {\n        textAlign: \"center\",\n        children: parseThousands(props.stargazersCount)\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Forks\"\n      }), _jsx(StyledText, {\n        textAlign: \"center\",\n        children: parseThousands(props.forksCount)\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Review\"\n      }), _jsxs(StyledText, {\n        textAlign: \"center\",\n        children: [props.reviewCount, \" \"]\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Rating\"\n      }), _jsxs(StyledText, {\n        textAlign: \"center\",\n        children: [props.ratingAverage, \" \"]\n      })]\n    })]\n  });\n};\n\nvar style = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\nexport default RepositoryStats;","map":{"version":3,"names":["React","StyledText","parseThousands","value","Math","round","String","RepositoryStats","props","style","container","stargazersCount","forksCount","reviewCount","ratingAverage","StyleSheet","create","flexDirection","justifyContent"],"sources":["C:/repositorios/JavaScript/ReactNative/ReactNative/src/components/RepositoryStats.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport StyledText from \"./StyledText\";\r\n//Metodo para parsear los stars\r\n\r\nconst parseThousands = (value) => {\r\n  return value >= 1000 ? `${Math.round(value / 100) / 10}k` : String(value);\r\n};\r\n\r\nconst RepositoryStats = (props) => {\r\n  return (\r\n    <View style={style.container}>\r\n      <View>\r\n        <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n          Stars\r\n        </StyledText>\r\n        <StyledText textAlign=\"center\">\r\n          {parseThousands(props.stargazersCount)}\r\n        </StyledText>\r\n      </View>\r\n      <View>\r\n        <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n          Forks\r\n        </StyledText>\r\n        <StyledText textAlign=\"center\">\r\n          {parseThousands(props.forksCount)}\r\n        </StyledText>\r\n      </View>\r\n      <View>\r\n        <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n          Review\r\n        </StyledText>\r\n        <StyledText textAlign=\"center\">{props.reviewCount} </StyledText>\r\n      </View>\r\n      <View>\r\n        <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n          Rating\r\n        </StyledText>\r\n        <StyledText textAlign=\"center\">{props.ratingAverage} </StyledText>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n  container: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n});\r\n\r\nexport default RepositoryStats;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,UAAP;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EAChC,OAAOA,KAAK,IAAI,IAAT,GAAmBC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,GAAnB,IAA0B,EAA7C,SAAqDG,MAAM,CAACH,KAAD,CAAlE;AACD,CAFD;;AAIA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;EACjC,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,KAAK,CAACC,SAAnB;IAAA,WACE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAA+B,WAAW,EAAC,MAA3C;QAAA;MAAA,EADF,EAIE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,UACGR,cAAc,CAACM,KAAK,CAACG,eAAP;MADjB,EAJF;IAAA,EADF,EASE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAA+B,WAAW,EAAC,MAA3C;QAAA;MAAA,EADF,EAIE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,UACGT,cAAc,CAACM,KAAK,CAACI,UAAP;MADjB,EAJF;IAAA,EATF,EAiBE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAA+B,WAAW,EAAC,MAA3C;QAAA;MAAA,EADF,EAIE,MAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,WAAgCJ,KAAK,CAACK,WAAtC;MAAA,EAJF;IAAA,EAjBF,EAuBE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAA+B,WAAW,EAAC,MAA3C;QAAA;MAAA,EADF,EAIE,MAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,WAAgCL,KAAK,CAACM,aAAtC;MAAA,EAJF;IAAA,EAvBF;EAAA,EADF;AAgCD,CAjCD;;AAmCA,IAAML,KAAK,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC9BN,SAAS,EAAE;IAAEO,aAAa,EAAE,KAAjB;IAAwBC,cAAc,EAAE;EAAxC;AADmB,CAAlB,CAAd;AAIA,eAAeX,eAAf"},"metadata":{},"sourceType":"module"}