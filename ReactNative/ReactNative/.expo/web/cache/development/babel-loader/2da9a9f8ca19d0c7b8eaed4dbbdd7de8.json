{"ast":null,"code":"import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyledText from \"./StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction RepositoryStats(props) {\n  console.log(props);\n  var navigation = props.navigation;\n\n  var goToPage = function goToPage(page) {\n    navigation.navigate(page);\n  };\n\n  var parseThousands = function parseThousands(value) {\n    return value >= 1000 ? Math.round(value / 100) / 10 + \"k\" : String(value);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsxs(View, {\n        children: [_jsx(StyledText, {\n          textAlign: \"center\",\n          fontWeights: \"bold\",\n          children: parseThousands(props.stargazersCount)\n        }), _jsx(StyledText, {\n          textAlign: \"center\",\n          children: \"Stars\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(StyledText, {\n          textAlign: \"center\",\n          fontWeights: \"bold\",\n          children: parseThousands(props.forksCount)\n        }), _jsx(StyledText, {\n          textAlign: \"center\",\n          children: \"Forks\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(StyledText, {\n          textAlign: \"center\",\n          fontWeights: \"bold\",\n          children: props.reviewCount\n        }), _jsx(StyledText, {\n          textAlign: \"center\",\n          children: \"Review\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(StyledText, {\n          textAlign: \"center\",\n          fontWeights: \"bold\",\n          children: props.ratingAverage\n        }), _jsx(StyledText, {\n          textAlign: \"center\",\n          children: \"Rating\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(Button, {\n        title: \"Ver mas\",\n        color: \"black\",\n        onPress: function onPress() {\n          return goToPage(\"InfoRepo\");\n        }\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  button: {\n    maxWidth: 100,\n    alignSelf: \"center\",\n    marginTop: 20,\n    borderRadius: 10,\n    overflow: \"hidden\"\n  }\n});\nexport default RepositoryStats;","map":{"version":3,"names":["React","createNativeStackNavigator","StyledText","Stack","RepositoryStats","props","console","log","navigation","goToPage","page","navigate","parseThousands","value","Math","round","String","styles","container","stargazersCount","forksCount","reviewCount","ratingAverage","button","StyleSheet","create","flexDirection","justifyContent","maxWidth","alignSelf","marginTop","borderRadius","overflow"],"sources":["C:/repositorios/JavaScript/ReactNative/ReactNative/src/components/RepositoryStats.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { View, StyleSheet, Button, SafeAreaView } from \"react-native\";\r\nimport StyledText from \"./StyledText\";\r\n\r\n//Metodo para parsear los stars\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction RepositoryStats(props) {\r\n  console.log(props);\r\n\r\n  const { navigation } = props;\r\n\r\n  const goToPage = (page) => {\r\n    navigation.navigate(page);\r\n  };\r\n\r\n  const parseThousands = (value) => {\r\n    return value >= 1000 ? `${Math.round(value / 100) / 10}k` : String(value);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View >\r\n        <View>\r\n          <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n            {parseThousands(props.stargazersCount)}\r\n          </StyledText>\r\n          <StyledText textAlign=\"center\">Stars</StyledText>\r\n        </View>\r\n        <View>\r\n          <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n            {parseThousands(props.forksCount)}\r\n          </StyledText>\r\n          <StyledText textAlign=\"center\">Forks</StyledText>\r\n        </View>\r\n        <View>\r\n          <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n            {props.reviewCount}\r\n          </StyledText>\r\n          <StyledText textAlign=\"center\">Review</StyledText>\r\n        </View>\r\n        <View>\r\n          <StyledText textAlign=\"center\" fontWeights=\"bold\">\r\n            {props.ratingAverage}\r\n          </StyledText>\r\n          <StyledText textAlign=\"center\">Rating</StyledText>\r\n        </View>\r\n      </View>\r\n      <View style={styles.button}>\r\n        <Button\r\n          title=\"Ver mas\"\r\n          color=\"black\"\r\n          onPress={() => goToPage(\"InfoRepo\")}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n  button: {\r\n    maxWidth: 100,\r\n    alignSelf: \"center\",\r\n    marginTop: 20,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nexport default RepositoryStats;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,0BAAT,QAA2C,gCAA3C;;;;;AAEA,OAAOC,UAAP;;;AAIA,IAAMC,KAAK,GAAGF,0BAA0B,EAAxC;;AAEA,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;EAC9BC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EAEA,IAAQG,UAAR,GAAuBH,KAAvB,CAAQG,UAAR;;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;IACzBF,UAAU,CAACG,QAAX,CAAoBD,IAApB;EACD,CAFD;;EAIA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;IAChC,OAAOA,KAAK,IAAI,IAAT,GAAmBC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,GAAnB,IAA0B,EAA7C,SAAqDG,MAAM,CAACH,KAAD,CAAlE;EACD,CAFD;;EAIA,OACE,MAAC,YAAD;IAAc,KAAK,EAAEI,MAAM,CAACC,SAA5B;IAAA,WACE,MAAC,IAAD;MAAA,WACE,MAAC,IAAD;QAAA,WACE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAA+B,WAAW,EAAC,MAA3C;UAAA,UACGN,cAAc,CAACP,KAAK,CAACc,eAAP;QADjB,EADF,EAIE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAAA;QAAA,EAJF;MAAA,EADF,EAOE,MAAC,IAAD;QAAA,WACE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAA+B,WAAW,EAAC,MAA3C;UAAA,UACGP,cAAc,CAACP,KAAK,CAACe,UAAP;QADjB,EADF,EAIE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAAA;QAAA,EAJF;MAAA,EAPF,EAaE,MAAC,IAAD;QAAA,WACE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAA+B,WAAW,EAAC,MAA3C;UAAA,UACGf,KAAK,CAACgB;QADT,EADF,EAIE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAAA;QAAA,EAJF;MAAA,EAbF,EAmBE,MAAC,IAAD;QAAA,WACE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAA+B,WAAW,EAAC,MAA3C;UAAA,UACGhB,KAAK,CAACiB;QADT,EADF,EAIE,KAAC,UAAD;UAAY,SAAS,EAAC,QAAtB;UAAA;QAAA,EAJF;MAAA,EAnBF;IAAA,EADF,EA2BE,KAAC,IAAD;MAAM,KAAK,EAAEL,MAAM,CAACM,MAApB;MAAA,UACE,KAAC,MAAD;QACE,KAAK,EAAC,SADR;QAEE,KAAK,EAAC,OAFR;QAGE,OAAO,EAAE;UAAA,OAAMd,QAAQ,CAAC,UAAD,CAAd;QAAA;MAHX;IADF,EA3BF;EAAA,EADF;AAqCD;;AAED,IAAMQ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IAAEQ,aAAa,EAAE,KAAjB;IAAwBC,cAAc,EAAE;EAAxC,CADoB;EAE/BJ,MAAM,EAAE;IACNK,QAAQ,EAAE,GADJ;IAENC,SAAS,EAAE,QAFL;IAGNC,SAAS,EAAE,EAHL;IAINC,YAAY,EAAE,EAJR;IAKNC,QAAQ,EAAE;EALJ;AAFuB,CAAlB,CAAf;AAWA,eAAe5B,eAAf"},"metadata":{},"sourceType":"module"}