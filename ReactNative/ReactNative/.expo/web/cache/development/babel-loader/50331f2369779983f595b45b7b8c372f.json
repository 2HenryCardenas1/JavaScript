{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StyledText from \"./StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar parseThousands = function parseThousands(value) {\n  return value >= 1000 ? Math.round(value / 100) / 10 + \"k\" : String(value);\n};\n\nvar RepositoryStats = function RepositoryStats(props) {\n  return _jsxs(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\"\n    },\n    children: [_jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Stars\"\n      }), _jsx(StyledText, {\n        textAlign: \"center\",\n        children: parseThousands(props.stargazersCount)\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Forks\"\n      }), _jsx(StyledText, {\n        textAlign: \"center\",\n        children: props.forksCount\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Review\"\n      }), _jsxs(StyledText, {\n        textAlign: \"center\",\n        children: [props.reviewCount, \" \"]\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(StyledText, {\n        textAlign: \"center\",\n        fontWeights: \"bold\",\n        children: \"Rating\"\n      }), _jsxs(StyledText, {\n        textAlign: \"center\",\n        children: [props.ratingAverage, \" \"]\n      })]\n    })]\n  });\n};\n\nvar RepositoryItem = function RepositoryItem(props) {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(StyledText, {\n      fontSize: \"subheading\",\n      fontWeights: \"bold\",\n      color: \"primary\",\n      children: [props.fullName, \" \"]\n    }), _jsxs(StyledText, {\n      children: [props.description, \" \"]\n    }), _jsxs(StyledText, {\n      children: [props.language, \" \"]\n    }), _jsx(RepositoryStats, _objectSpread({}, props))]\n  }, props.id);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingBottom: 5,\n    paddingTop: 5\n  }\n});\nexport default RepositoryItem;","map":{"version":3,"names":["React","StyledText","parseThousands","value","Math","round","String","RepositoryStats","props","flexDirection","justifyContent","stargazersCount","forksCount","reviewCount","ratingAverage","RepositoryItem","styles","container","fullName","description","language","id","StyleSheet","create","padding","paddingBottom","paddingTop"],"sources":["C:/repositorios/JavaScript/ReactNative/ReactNative/src/components/RepositoryItems.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Text, View, StyleSheet } from \"react-native\";\r\nimport StyledText from \"./StyledText\";\r\n\r\n/*\r\n-Componente para crear estilos : StyleSheet\r\n-Recive un arreglo de propssitorio\r\n-No se usan {}, solo para llamadas\r\n*/\r\n\r\n//Metodo para parsear los stars\r\n\r\nconst parseThousands = value => {\r\n    return value >= 1000\r\n    ? `${Math.round(value /100 ) / 10}k`\r\n    :String(value)\r\n}\r\n\r\n\r\nconst RepositoryStats = (props) => {\r\n  return (\r\n    <View style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}>\r\n      <View>\r\n        <StyledText textAlign='center' fontWeights=\"bold\">Stars</StyledText>\r\n        <StyledText textAlign='center'>{parseThousands(props.stargazersCount)}</StyledText>\r\n      </View>\r\n      <View>\r\n        <StyledText textAlign='center' fontWeights=\"bold\">Forks</StyledText>\r\n        <StyledText textAlign='center'>{props.forksCount}</StyledText>\r\n      </View>\r\n      <View>\r\n        <StyledText  textAlign='center' fontWeights=\"bold\">Review</StyledText>\r\n        <StyledText textAlign='center' >{props.reviewCount} </StyledText>\r\n      </View>\r\n      <View>\r\n        <StyledText textAlign='center' fontWeights=\"bold\">Rating</StyledText>\r\n        <StyledText textAlign='center'>{props.ratingAverage} </StyledText>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst RepositoryItem = (props) => (\r\n  <View key={props.id} style={styles.container}>\r\n    <StyledText fontSize=\"subheading\" fontWeights=\"bold\" color=\"primary\">\r\n      {props.fullName}{\" \"}\r\n    </StyledText>\r\n    <StyledText>{props.description} </StyledText>\r\n    <StyledText>{props.language} </StyledText>\r\n    <RepositoryStats {...props} />\r\n  </View>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { padding: 20, paddingBottom: 5, paddingTop: 5 },\r\n});\r\n\r\nexport default RepositoryItem;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,UAAP;;;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;EAC5B,OAAOA,KAAK,IAAI,IAAT,GACFC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAE,GAAlB,IAA0B,EADxB,SAENG,MAAM,CAACH,KAAD,CAFP;AAGH,CAJD;;AAOA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;EACjC,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,aAAa,EAAE,KAAjB;MAAwBC,cAAc,EAAE;IAAxC,CAAb;IAAA,WACE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAA+B,WAAW,EAAC,MAA3C;QAAA;MAAA,EADF,EAEE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,UAAgCR,cAAc,CAACM,KAAK,CAACG,eAAP;MAA9C,EAFF;IAAA,EADF,EAKE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAA+B,WAAW,EAAC,MAA3C;QAAA;MAAA,EADF,EAEE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,UAAgCH,KAAK,CAACI;MAAtC,EAFF;IAAA,EALF,EASE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAa,SAAS,EAAC,QAAvB;QAAgC,WAAW,EAAC,MAA5C;QAAA;MAAA,EADF,EAEE,MAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,WAAiCJ,KAAK,CAACK,WAAvC;MAAA,EAFF;IAAA,EATF,EAaE,MAAC,IAAD;MAAA,WACE,KAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAA+B,WAAW,EAAC,MAA3C;QAAA;MAAA,EADF,EAEE,MAAC,UAAD;QAAY,SAAS,EAAC,QAAtB;QAAA,WAAgCL,KAAK,CAACM,aAAtC;MAAA,EAFF;IAAA,EAbF;EAAA,EADF;AAoBD,CArBD;;AAuBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACP,KAAD;EAAA,OACrB,MAAC,IAAD;IAAqB,KAAK,EAAEQ,MAAM,CAACC,SAAnC;IAAA,WACE,MAAC,UAAD;MAAY,QAAQ,EAAC,YAArB;MAAkC,WAAW,EAAC,MAA9C;MAAqD,KAAK,EAAC,SAA3D;MAAA,WACGT,KAAK,CAACU,QADT,EACmB,GADnB;IAAA,EADF,EAIE,MAAC,UAAD;MAAA,WAAaV,KAAK,CAACW,WAAnB;IAAA,EAJF,EAKE,MAAC,UAAD;MAAA,WAAaX,KAAK,CAACY,QAAnB;IAAA,EALF,EAME,KAAC,eAAD,oBAAqBZ,KAArB,EANF;EAAA,GAAWA,KAAK,CAACa,EAAjB,CADqB;AAAA,CAAvB;;AAWA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC/BN,SAAS,EAAE;IAAEO,OAAO,EAAE,EAAX;IAAeC,aAAa,EAAE,CAA9B;IAAiCC,UAAU,EAAE;EAA7C;AADoB,CAAlB,CAAf;AAIA,eAAeX,cAAf"},"metadata":{},"sourceType":"module"}